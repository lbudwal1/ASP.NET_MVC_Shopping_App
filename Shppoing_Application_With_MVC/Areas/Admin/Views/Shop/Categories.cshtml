@model IEnumerable<Shppoing_Application_With_MVC.Models.ViewModel.Shop.CategoryVM>

@{
    ViewBag.Title = "Categories";
}

<h2>Categories</h2>

<div class="new-cat">
    <input type="text" id="newCatname" />
    <p>
        <a href="#" id="newCata">Add a new Category</a>
        <span class="ajax-text">
            <img src="~/Content/img/ajax-loader.gif" />
        </span>

    </p>
</div>


@if (!Model.Any())
{
    <h2 class="text-center">There are No Categories available right Now!!</h2>
}
else
{

    <table class="table sorting" id="pages">
        <tr class="home">
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>

                    @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>

                <td>
                    @Html.ActionLink("Delete", "DeleteCategory", new { id = item.Id }, new { @class = "delete" })
                </td>
            </tr>
        }

    </table>
}

@section Scripts{

    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js"></script>

    <script>

        $(function () {
            /*
            Add New Category
            */

            var newCatA = $("a#newCata");
            var newCatTextinput = $("#newCatname");
            var ajaxText = $("span.ajax-text");
            var table = $("table#pages tbody");

            newCatTextinput.keyup(function (e) {
                if (e.keycode == 13) {
                    newCatA.click();
                }
            });
            
            newCatA.click(function (e) {
                e.preventDefault();

                var catName = newCatTextinput.val();

                if(catName.length < 2)
                {
                    alert("Category Name must be at least 2 characters long...")
                    return false;
                }
                ajaxText.show();

                var url = "/admin/shop/AddNewCategory";

                $.post(url, { catName: catName }, function (data) {

                    var response = data.trim();

                    if(response == "titletaken")
                    {
                        ajaxText.html("<span class='alert-danger'>The title is already taken!</span>")
                        setTimeout(function () {
                            ajaxText.fadeOut("fast", function () {
                                ajaxText.html("<img src=/Content/img/ajax-loader.gif/>")
                            });
                        }, 2000);
                    }
                })
            })


      /*
      CONFIRM PAGE DELETION HERE
      */

            $("a.delete").click(function () {
                if (!confirm("confirm page deletion")) return false;
            });



            // GRAD AND DROP AND CUSTOMIZE PAGES BY ADMIN, I ALSO CREATE A ReorderPages METHOD IN PAGE CONTOLLER
            $("table#pages tbody").sortable({
                items: "tr:not(.home)",
                placeholder: "ui-state-highlight",
                update: function () {
                    var ids = $("table#pages tbody").sortable("serialize");
                    var url = "/Admin/Pages/ReorderPages";

                    $.post(url, ids, function (data) {
                    });
                }
            });
        });
    </script>


}